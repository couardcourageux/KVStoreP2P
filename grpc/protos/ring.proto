syntax = "proto3";

package Ring;

////////////////////////Services
service Node2Node {

    rpc obtainId(IDReqMsg) returns (IDReqRespMsg) {}
    rpc findAddr(IdRingMsg) returns (NodeAddrMsg) {}
    
}

service AgentCluster {
    rpc joinReq(AgentDescMsg) returns (ResponseMsg) {}
}

service ClusterCronJob {
    rpc callPing(voidMsg) returns (voidMsg) {}
    rpc callCheckPings(voidMsg) returns (voidMsg) {}
    // rpc callPing(voidMsg) returns (voidMsg) {}
}

//////////////////General
message IpPortMsg {
    string agentId = 1;
    string ip = 2;
    string port = 3;
}

message ResponseMsg {
    int64 errorCode = 1;
    bool respStatus = 2;
}

message voidMsg {}
//////////////////obtainId
message IDReqMsg {
    string token = 1;
}
message IDReqRespMsg {
    int64 errorCode = 1;
    string agentId = 2;
    string nodeId = 3;
}
//////////////////

//////////////////findAddr
message IdRingMsg {
    string ringId = 1;
}

message NodeAddrMsg {
    int64 errorCode = 1;
    string NodeId = 2;
    IpPortMsg master = 3;
    IpPortMsg backup = 4;
}
//////////////////

//////////////////joinReq
message AgentDescMsg {
    IpPortMsg agentLoc = 1;
    int64 agentType = 2;
    int64 capacity = 3;
}
/////////////////